import{C as x,aX as m,S as w,l as f,aZ as b,a_ as h,a$ as T,b0 as y,b1 as E,ab as R,b2 as A,b3 as L,b4 as M,b5 as v}from"./lib-1.0.43-GM4CAPbj.js";import{r as S}from"./redux-1.0.43-X9ShETON.js";import{g as D}from"./lang-1.0.43-B1WmIuB6.js";import{a as F}from"./hooks-1.0.43-Bzf6s8gj.js";const k=t=>{const e=S.useMemo(()=>{var n,i,d,c,u,p,g;const l={language:x.defaultLanguage,allowFullScreen:!0,safeMode:!1};let a=m.getSelectors().selectMetaDataById(w.getState().metaData,t);const s=(i=(n=a==null?void 0:a.app)==null?void 0:n.app[0])==null?void 0:i.app_settings;if(s!=null&&s!==""){const o=JSON.parse(s);l.language=D((d=o==null?void 0:o.settings)==null?void 0:d.app_language)}(a==null?void 0:a.appRootId)!==void 0&&(a=m.getSelectors().selectMetaDataById(w.getState().metaData,a.appRootId));const r=(u=(c=a==null?void 0:a.app)==null?void 0:c.app[0])==null?void 0:u.app_settings;if(r!=null&&r!==""){const o=JSON.parse(r);l.allowFullScreen=(p=o==null?void 0:o.settings)==null?void 0:p.app_fullscreen,l.safeMode=(g=o==null?void 0:o.settings)==null?void 0:g.app_safe_mode}return l},[]);return f.debug("appSettings",e),e},B={apply:"Apply",back:"Back",bulkActions:"Bulk Actions",cancel:"Cancel",less:"Less",more:"More",newRow:"New row",ok:"OK",close:"Close",delete:"Delete",edit:"Edit",refresh:"Refresh",toggleFullScreen:"Toggle full screen",view:"View",yes:"Yes",no:"No",noRowsSelected:"No rows selected",exportToPdf:"Export to PDF",exportToCsv:"Export to CSV",exportToJson:"Export to JSON",exportToExcel:"Export to Excel",exportToXml:"Export to XML",exportToSql:"Export to SQL",deletePermanently:"Delete permanently",addSelectedRow:"Add selected rows",enterDate:"Enter a date",enterTime:"Enter a time",enterNumber:"Enter a number",enterText:"Enter text",enterMultiLineText:"Enter multi line text",selectFromList:"Select from list",selectFromRadio:"Select from radio group",selectEnum:"Select a value from the list or start typing",loadingTable:"Loading table...",loadingForm:"Loading form...",loadingData:"Loading data...",mandatoryField:"Field must be entered",greaterThan:"Value must be greater than",lessThan:"Value must be less than",invalidDate:"Invalid date",invalidTime:"Invalid time",minAllowed:"Minimum value allowed is",maxAllowed:"Maximum value allowed is",inputError:"There was a problem with your input. Please check the form and try again.",errorLoadingData:"Error loading data",invalidResponse:"Invalid response. Please contact support.",createRelationshipFailed:"Relationship creation failed",insertSuccessful:"Row inserted",updatedSuccessful:"Row updated",deletedSuccessful:"Row deleted",revertSuccessful:"Successfully reverted changes",nothingToUpdate:"Nothing to update",deleteRowTitle:"Delete row?",deleteRowMessage:"Are you sure you want to permanently delete this row? This action cannot be undone!",deleteRowsTitle:"Delete selected row?",deleteRowsMessage:"Are you sure you want to permanently delete the selected row? This action cannot be undone!",page:"Page",powered:"Powered by WP Data Access",settings:"Settings",portrait:"Portrait",landscape:"Landscape",striped:"Striped",grid:"Grid",text:"Text",title:"Title",columnSettings:"Column Settings",wrap:"Wrap text",nowrap:"Don't wrap text",selectAll:"Select All"},O=()=>{const t=F();return S.useCallback(e=>{f.debug(e),t(b({appId:e})),t(h({appId:e})),t(T({appId:e})),t(y({appId:e})),t(E({appId:e})),t(R({appId:e})),t(A({appId:e})),t(L({appId:e})),t(M({appId:e})),t(v({appId:e}))},[])};export{B as L,k as a,O as u};
